{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","response","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,Q,EAAS;AACnB,4BAAG,CAACA,SAASC,EAAb,EAAiB,MAAM,IAAIC,KAAJ,CAAUF,SAASG,UAAnB,CAAN;AACjB,+BAAOH,QAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAY,MAAKC,aAAL,CAAmBP,QAAnB,CAAZ;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAYN,SAASQ,IAAT,EAAZ;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AACZ,+BAAOJ,MAAMD,GAAN,EAAU;AACbM,qCAAS,EAAC,gBAAiB,kBAAlB,EADI;AAEbC,oCAAQ,MAFK;AAGbC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHO,yBAAV,CAAP;AAKH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(response){\n        if(!response.ok) throw new Error(response.statusText);\n        return response;\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(response => this._handleErrors(response))\n            .then(response => response.json());\n    }\n\n    post(url, dado) {\n        return fetch(url,{\n            headers: {'Content-type' : 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n    }\n}"]}