{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","response","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAEYC,Q,EAAS;AACnB,gBAAG,CAACA,SAASC,EAAb,EAAiB,MAAM,IAAIC,KAAJ,CAAUF,SAASG,UAAnB,CAAN;AACjB,mBAAOH,QAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AACL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAY,MAAKC,aAAL,CAAmBP,QAAnB,CAAZ;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAYN,SAASQ,IAAT,EAAZ;AAAA,aAFH,CAAP;AAGH;;;6BAEIJ,G,EAAKK,I,EAAM;AACZ,mBAAOJ,MAAMD,GAAN,EAAU;AACbM,yBAAS,EAAC,gBAAiB,kBAAlB,EADI;AAEbC,wBAAQ,MAFK;AAGbC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHO,aAAV,CAAP;AAKH","file":"HttpService.js","sourcesContent":["class HttpService {\n\n    _handleErrors(response){\n        if(!response.ok) throw new Error(response.statusText);\n        return response;\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(response => this._handleErrors(response))\n            .then(response => response.json());\n    }\n\n    post(url, dado) {\n        return fetch(url,{\n            headers: {'Content-type' : 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n    }\n}"]}