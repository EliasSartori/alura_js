{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana(){\n\n        return new Promise ((resolve, reject) => {\n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n\n        return new Promise ((resolve, reject) => {\n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n\n        return new Promise ((resolve, reject) => {\n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    console.log(negociacoes);\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                })\n        });\n    }\n\n    obterNegociacoes() {\n\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), []);\n\n            return negociacoes;\n\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\n    }\n\n    cadastra(negociacao){\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new NegociacaoDao(connection))\n                .then(dao => dao.adiciona(negociacao))\n                .then(() => 'Negociação adicionada com sucesso')\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível adicionar a negociação')\n                });\n    }\n\n    lista(){\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new NegociacaoDao(connection))\n                .then(dao => dao.listaTodos())\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as negociações');\n                })\n    }\n\n    apaga(){\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new NegociacaoDao(connection))\n                .then(dao => dao.apagaTodos())\n                .then(() => 'Negociações apagadas com sucesso')\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível apagar negociações');\n                });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente => \n                        negociacao.isEquals(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível importar negociações');\n            });\n    }\n}"]}